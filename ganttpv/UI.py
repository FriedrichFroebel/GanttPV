#!/usr/bin/env python
# generated by wxGlade 0.3.2 on Mon May 17 15:24:55 2004

# Copyright 2004 by Brian C. Christensen

#    This file is part of GanttPV.
#
#    GanttPV is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    GanttPV is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with GanttPV; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

# 050409 - Alexander - revised MultipleSelection, added resize border.
# 050426 - Alexander - assigned a keyboard shortcut to Redo item.
# 050504 - Alexander - added Window menu; added "Close Reports" to File menu; assigned keyboard shortcuts to "Save As" and "Close Reports"
# 050515 - Alexander - changed some filenames to use my latest icons
# 050518 - Alexander - fixed a serious scrollbar bug by commenting out SetSizeHints calls
# 050518 - Alexander - changed ReportFrame to use the size given in its __init__ arguments

import wx, ID, Menu

class MainFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MainFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.Main_Panel = wx.Panel(self, -1)
        
        # Menu Bar
        self.main_menubar = wx.MenuBar()
        self.SetMenuBar(self.main_menubar)
        self.FileMenu = wx.Menu()
        self.FileMenu.Append(wx.ID_NEW, "New\tCTRL-N", "New project file", wx.ITEM_NORMAL)
        self.FileMenu.Append(wx.ID_OPEN, "Open...\tCTRL-O", "Open existing project file", wx.ITEM_NORMAL)
        self.FileMenu.AppendSeparator()
        self.FileMenu.Append(wx.ID_CLOSE, "Close\tCTRL-W", "Close project file", wx.ITEM_NORMAL)
        self.FileMenu.Append(wx.ID_CLOSE_ALL, "Close Reports\tCTRL-ALT-W", "Close grid reports")
        self.FileMenu.Append(wx.ID_SAVE, "Save\tCTRL-S", "Save project file", wx.ITEM_NORMAL)
        self.FileMenu.Append(wx.ID_SAVEAS, "Save As...\tCTRL-SHIFT-S", "Save project file with new name", wx.ITEM_NORMAL)
        self.FileMenu.Append(wx.ID_EXIT, "Quit\tCTRL-Q", "Quit program", wx.ITEM_NORMAL)
        self.main_menubar.Append(self.FileMenu, "File")
        self.Edit = wx.Menu()
        self.Edit.Append(wx.ID_UNDO, "Undo\tCTRL-Z", "Undo last change", wx. ITEM_NORMAL)
        self.Edit.Append(wx.ID_REDO, "Redo\tCTRL-SHIFT-Z", "Redo change", wx.ITEM_NORMAL)
        self.main_menubar.Append(self.Edit, "Edit")
        self.Script = wx.Menu()
        self.Script.Append(ID.FIND_SCRIPTS, "Find Scripts", "", wx.ITEM_NORMAL)
        self.main_menubar.Append(self.Script, "Script")
        self.WindowMenu = wx.Menu()
        self.WindowMenu.Append(ID.FIRST_WINDOW, "Main Window\tCTRL-1", "Bring the main window to front", wx.ITEM_CHECK)
        self.WindowMenu.Check(ID.FIRST_WINDOW, True)
        self.main_menubar.Append(self.WindowMenu, "Window")
        self.Help = wx.Menu()
        self.Help.Append(wx.ID_ABOUT, "About GanttPV", "", wx. ITEM_NORMAL)
        self.Help.Append(ID.HOME_PAGE, "GanttPV Home", "", wx.ITEM_NORMAL)
        self.Help.Append(ID.HELP_PAGE, "Help Page", "", wx.ITEM_NORMAL)
        self.Help.Append(ID.FORUM, "Forum", "", wx.ITEM_NORMAL)
        self.main_menubar.Append(self.Help, "&Help")
        # Menu Bar end
        self.main_statusbar = self.CreateStatusBar(1, 0)
        
        # Tool Bar
        self.main_toolbar = wx.ToolBar(self, -1)
        self.SetToolBar(self.main_toolbar)
        self.main_toolbar.AddLabelTool(ID.NEW_PROJECT, "New Project", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/New Project.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "New Project", "Create a new project record")
        self.main_toolbar.AddLabelTool(ID.NEW_REPORT, "Insert Report", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/Insert Report.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Insert Report", "Create a new report for selected project")
        self.main_toolbar.AddLabelTool(ID.DUPLICATE, "Duplicate", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/Duplicate.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Duplicate", "Duplicate selected project or report")
        self.main_toolbar.AddSeparator()
        self.main_toolbar.AddLabelTool(ID.DELETE, "Delete", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/Delete.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Delete", "Delete selected project or report")
        self.main_toolbar.AddLabelTool(ID.SHOW_HIDDEN_REPORT, "Show Hidden", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/Show Hidden.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_CHECK, "Show Hidden", "Hide/show hidden and deleted records")
        # Tool Bar end
#        self.main_list = wx.ListCtrl(self.Main_Panel, -1, style=wx.LC_REPORT|wx.LC_SINGLE_SEL|wx.SUNKEN_BORDER)

#        self.__set_properties()
#        self.__do_layout()
        # end wxGlade

    def set_properties(self):
        # begin wxGlade: MainFrame.__set_properties
        self.SetTitle("Main")
        self.SetSize((422, 313))
        self.main_statusbar.SetStatusWidths([-1])
        # statusbar fields
#        main_statusbar_fields = ["frame_1_statusbar"]
#        for i in range(len(main_statusbar_fields)):
#            self.main_statusbar.SetStatusText(main_statusbar_fields[i], i)
        self.main_toolbar.Realize()
        # end wxGlade

    def do_layout(self):
        # begin wxGlade: MainFrame.__do_layout
        sizer_28 = wx.BoxSizer(wx.VERTICAL)
        sizer_29 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_30 = wx.BoxSizer(wx.VERTICAL)
        sizer_29.Add((10, 10), 0, 0, 0)
        sizer_30.Add((10, 10), 0, 0, 0)
        sizer_30.Add(self.main_list, 1, wx.EXPAND, 0)
        sizer_30.Add((10, 10), 0, 0, 0)
        sizer_29.Add(sizer_30, 1, wx.EXPAND, 0)
        sizer_29.Add((10, 10), 0, 0, 0)
        self.Main_Panel.SetAutoLayout(1)
        self.Main_Panel.SetSizer(sizer_29)
        sizer_29.Fit(self.Main_Panel)
        # sizer_29.SetSizeHints(self.Main_Panel)
        sizer_28.Add(self.Main_Panel, 1, wx.EXPAND, 0)
        self.SetAutoLayout(1)
        self.SetSizer(sizer_28)
        self.Layout()
        self.Centre()
        # end wxGlade

# end of class MainFrame


class ReportFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: ReportFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.Report_Panel = wx.Panel(self, -1)
        
        # Menu Bar
        self.report_menubar = wx.MenuBar()
        self.SetMenuBar(self.report_menubar)
        self.FileMenu = wx.Menu()
        self.FileMenu.Append(wx.ID_NEW, "New\tCTRL-N", "New project file", wx.ITEM_NORMAL)
        self.FileMenu.Append(wx.ID_OPEN, "Open...\tCTRL-O", "Open existing project file", wx.ITEM_NORMAL)
        self.FileMenu.AppendSeparator()
        self.FileMenu.Append(wx.ID_CLOSE, "Close\tCTRL-W", "Close project file", wx.ITEM_NORMAL)
        self.FileMenu.Append(wx.ID_CLOSE_ALL, "Close Reports\tCTRL-ALT-W", "Close grid reports")
        self.FileMenu.Append(wx.ID_SAVE, "Save\tCTRL-S", "Save project file", wx.ITEM_NORMAL)
        self.FileMenu.Append(wx.ID_SAVE, "Save\tCTRL-S", "Save project file", wx.ITEM_NORMAL)
        self.FileMenu.Append(wx.ID_EXIT, "Quit\tCTRL-Q", "Quit program", wx.ITEM_NORMAL)
        self.report_menubar.Append(self.FileMenu, "File")
        self.Edit = wx.Menu()
        self.Edit.Append(wx.ID_UNDO, "Undo\tCTRL-Z", "Undo last change", wx.ITEM_NORMAL)
        self.Edit.Append(wx.ID_REDO, "Redo\tCTRL-SHIFT-Z", "Redo change", wx.ITEM_NORMAL)
        self.report_menubar.Append(self.Edit, "Edit")
        self.Script = wx.Menu()
        self.Script.Append(ID.FIND_SCRIPTS, "Find Scripts", "", wx.ITEM_NORMAL)
        self.report_menubar.Append(self.Script, "Script")
        self.WindowMenu = wx.Menu()
        self.WindowMenu.Append(ID.FIRST_WINDOW, "Main Window\tCTRL-1", "Bring the main window to front", wx.ITEM_CHECK)
        self.report_menubar.Append(self.WindowMenu, "Window")
        self.Help = wx.Menu()
        self.Help.Append(wx.ID_ABOUT, "About GanttPV", "", wx.ITEM_NORMAL)
        self.Help.Append(ID.HOME_PAGE, "GanttPV Home", "", wx.ITEM_NORMAL)
        self.Help.Append(ID.HELP_PAGE, "Help Page", "", wx.ITEM_NORMAL)
        self.Help.Append(ID.FORUM, "Forum", "", wx.ITEM_NORMAL)
        self.report_menubar.Append(self.Help, "&Help")
        # Menu Bar end
        self.report_statusbar = self.CreateStatusBar(1, 0)
        
        # Tool Bar
        self.report_toolbar = wx.ToolBar(self, -1)
        self.SetToolBar(self.report_toolbar)
        self.report_toolbar.AddLabelTool(ID.INSERT_ROW, "Insert Row", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/Insert Row.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Insert Row", "Insert new row in primary table")
        self.report_toolbar.AddLabelTool(ID.DUPLICATE_ROW, "Duplicate Row", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/Duplicate.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Duplicate Row", "Duplicate selected row")
        self.report_toolbar.AddLabelTool(ID.DELETE_ROW, "Delete Row", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/Delete Row.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Delete Row", "Delete selected rows")
        self.report_toolbar.AddLabelTool(ID.MOVE_UP, "Move Up", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/Move Up.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Move Row Up", "Move selected rows up")
        self.report_toolbar.AddLabelTool(ID.MOVE_DOWN, "Move Down", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/Move Down.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Move Row Down", "Move selected rows down")
        self.report_toolbar.AddSeparator()
        self.report_toolbar.AddLabelTool(ID.PREREQUISITE, "Assign Prerequisites", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/Assign Prerequisites.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Assign Prerequisites", "Identify prerequisites for selected task")
        self.report_toolbar.AddLabelTool(ID.ASSIGN_RESOURCE, "Assign Resources", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/Assign Resources.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Assign Resources", "Assign resources to selected task")
        self.report_toolbar.AddSeparator()
        self.report_toolbar.AddLabelTool(ID.HIDE_ROW, "Hide Row", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/Hide Report.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Hide Row", "Hide/show selected rows")
        self.report_toolbar.AddLabelTool(ID.SHOW_HIDDEN, "Show Hidden", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/Show Hidden.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_CHECK, "Show Hidden", "Show or reveal hidden and deleted rows")
        self.report_toolbar.AddSeparator()
        self.report_toolbar.AddLabelTool(ID.INSERT_COLUMN, "Insert Column", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/Insert Column.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Insert Column", "Insert column types from popup list")
        self.report_toolbar.AddLabelTool(ID.DELETE_COLUMN, "Delete Column", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/Delete Column.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Delete Column", "Delete selected columns")
        self.report_toolbar.AddLabelTool(ID.MOVE_LEFT, "Move Left", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/Move Left.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Move Column Left", "Move selected columns to left")
        self.report_toolbar.AddLabelTool(ID.MOVE_RIGHT, "Move Right", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/Move Right.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Move Column Right", "Move selected columns to the right")
        self.report_toolbar.AddSeparator()
        self.report_toolbar.AddLabelTool(ID.COLUMN_OPTIONS, "Column Options", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/Column Options.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Column Options", "Set options on selected column")
        self.report_toolbar.AddSeparator()
        self.report_toolbar.AddLabelTool(ID.SCROLL_LEFT_FAR, "Scroll Left Far", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/Scroll Left Fast.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Scroll Left", "Scroll left several time periods")
        self.report_toolbar.AddLabelTool(ID.SCROLL_LEFT, "Scroll Left", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/Scroll Left Slow.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Scroll Left", "Scroll left one time period")
        self.report_toolbar.AddLabelTool(ID.SCROLL_RIGHT, "Scroll Right", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/Scroll Right Slow.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Scroll Right", "Scroll right one time period")
        self.report_toolbar.AddLabelTool(ID.SCROLL_RIGHT_FAR, "Scroll Right Far", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/Scroll Right Fast.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Scroll Right", "Scroll right several time periods")
        self.report_toolbar.AddLabelTool(ID.SCROLL_TO_TASK, "Scroll To Task", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/Scroll to Task.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Scroll To Task", "Scroll to display bar for selected task")
        # Tool Bar end
#        self.report_window = GanttReport.GanttChartGrid(self.Report_Panel, -1, -1,  -1, reportid)

#        self.__set_properties()
#        self.__do_layout()
        # end wxGlade

    def set_properties(self):
        # begin wxGlade: ReportFrame.__set_properties
#        self.SetTitle("Report")
#        self.SetSize((768, 311))
        # self.Enable(0)
        self.report_statusbar.SetStatusWidths([-1])
        # statusbar fields
#        report_statusbar_fields = ["frame_2_statusbar"]
#        for i in range(len(report_statusbar_fields)):
#            self.report_statusbar.SetStatusText(report_statusbar_fields[i], i)
        self.report_toolbar.Realize()
        # end wxGlade

    def do_layout(self):
        # begin wxGlade: ReportFrame.__do_layout
        sizer_128 = wx.BoxSizer(wx.VERTICAL)
        sizer_129 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_130 = wx.BoxSizer(wx.VERTICAL)
        sizer_129.Add((10, 10), 0, 0, 0)
        sizer_130.Add((10, 10), 0, 0, 0)
        sizer_130.Add(self.report_window, 1, wx.EXPAND, 0)
        sizer_130.Add((10, 10), 0, 0, 0)
        sizer_129.Add(sizer_130, 1, wx.EXPAND, 0)
        sizer_129.Add((10, 10), 0, 0, 0)
        self.Report_Panel.SetAutoLayout(1)
        self.Report_Panel.SetSizer(sizer_129)
        sizer_129.Fit(self.Report_Panel)
        # sizer_129.SetSizeHints(self.Report_Panel)
        sizer_128.Add(self.Report_Panel, 1, wx.EXPAND, 0)
        self.SetAutoLayout(1)
        self.SetSizer(sizer_128)
        self.Layout()
        # end wxGlade

# end of class ReportFrame


class ResourceFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: ResourceFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        
        # Menu Bar
        self.resource_menubar = wx.MenuBar()
        # Menu Bar end
        self.resource_statusbar = self.CreateStatusBar(1, 0)
        
        # Tool Bar
        self.resource_toolbar = wx.ToolBar(self, -1)
        self.SetToolBar(self.resource_toolbar)
        self.resource_toolbar.AddLabelTool(ID.NEW_RESOURCE, "New Resource", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/Insert Row.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "New Resource", "")
        self.resource_toolbar.AddLabelTool(ID.EDIT_RESOURCE, "Edit Resource", wx.NullBitmap, wx.NullBitmap, wx.ITEM_NORMAL, "Edit Resource", "")
        self.resource_toolbar.AddLabelTool(ID.ASSIGN_TASK, "Assign Task", wx.NullBitmap, wx.NullBitmap, wx.ITEM_NORMAL, "Assign Task", "")
        self.resource_toolbar.AddSeparator()
        self.resource_toolbar.AddLabelTool(ID.DELETE_RESOURCE, "Delete Resource", Menu.Bitmap("/Users/bcc/Desktop/PM/App/icons/Delete Row.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Delete Resource", "")
        self.resource_toolbar.AddLabelTool(ID.HIDE_RESOURCE, "Hide Resource", wx.NullBitmap, wx.NullBitmap, wx.ITEM_NORMAL, "Hide Resource", "")
        self.resource_toolbar.AddLabelTool(ID.SHOW_HIDDEN_RESOURCE, "Show Hidden", wx.NullBitmap, wx.NullBitmap, wx.ITEM_CHECK, "Show Hidden", "")
        # Tool Bar end
#        self.resource_list = wx.ListCtrl(self, -1, style=wx.LC_REPORT|wx.LC_EDIT_LABELS|wx.LC_SINGLE_SEL|wx.SUNKEN_BORDER)

#        self.__set_properties()
#        self.__do_layout()
        # end wxGlade

    def set_properties(self):
        # begin wxGlade: ResourceFrame.__set_properties
        self.SetTitle("Resource")
        self.SetSize((336, 182))
        self.resource_statusbar.SetStatusWidths([-1])
        # statusbar fields
#        resource_statusbar_fields = ["frame_3_statusbar"]
#        for i in range(len(resource_statusbar_fields)):
#            self.resource_statusbar.SetStatusText(resource_statusbar_fields[i], i)
        self.resource_toolbar.Realize()
        # end wxGlade

    def do_layout(self):
        # begin wxGlade: ResourceFrame.__do_layout
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_3.Add(self.resource_list, 1, wx.EXPAND, 0)
        self.SetAutoLayout(1)
        self.SetSizer(sizer_3)
        self.Layout()
        # end wxGlade

# end of class ResourceFrame


class AboutDialog(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: AboutDialog.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.Logo_Text = wx.StaticText(self, -1, "GanttPV")
        self.About_Text = wx.StaticText(self, -1, "Copyright 2004, 2005 by Brian C. Christensen (brian@pureviolet.net)\n\nGanttPV (version 0.5) is an open source project management tool. \n\n- Originally designed and coded by Brian C. Christensen\n- Icons by Alexander V. Christensen\n\nThanks to Alexander Christensen and Roy Heath for assistance \nwith the hard parts.\n\nGanttPV is distributed under the GNU GPL. See the file 'License.txt' \naccompanying this software for details. GanttPV comes with \nABSOLUTELY NO WARRANTY.\n\nIcons copyright 2004, 2005 by Alexander V. Christensen (used by \npermission)")
        self.OK_Button = wx.Button(self, wx.ID_OK, "OK")

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: AboutDialog.__set_properties
        self.SetTitle("About GanttPV")
        # self.SetSize((428, 317))
        self.SetSize((428, 357))
        self.Logo_Text.SetFont(wx.Font(22, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.About_Text.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: AboutDialog.__do_layout
        sizer_33 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_34 = wx.BoxSizer(wx.VERTICAL)
        sizer_35 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_33.Add((10, 10), 0, 0, 0)
        sizer_34.Add((10, 10), 0, 0, 0)
        sizer_34.Add(self.Logo_Text, 0, 0, 0)
        sizer_34.Add((10, 10), 0, 0, 0)
        sizer_34.Add(self.About_Text, 0, wx.EXPAND, 0)
        sizer_34.Add((10, 0), 0, 0, 0)
        sizer_35.Add((10, 10), 0, 0, 0)
        sizer_35.Add(self.OK_Button, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_35.Add((10, 10), 0, 0, 0)
        sizer_34.Add(sizer_35, 1, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_34.Add((10, 10), 0, 0, 0)
        sizer_33.Add(sizer_34, 1, wx.EXPAND, 0)
        sizer_33.Add((10, 10), 0, 0, 0)
        self.SetAutoLayout(1)
        self.SetSizer(sizer_33)
        self.Layout()
        # end wxGlade

# end of class AboutDialog


class EditTaskFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: EditTaskFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.panel_2 = wx.Panel(self, -1)
        self.panel_1 = wx.Panel(self, -1)
        self.EditTaskLabel = wx.StaticText(self, -1, "Edit Task")
        self.et_Name_Label = wx.StaticText(self, -1, "Name")
        self.et_Name = wx.TextCtrl(self, -1, "")
        self.et_Plan_Start_Date_Label = wx.StaticText(self, -1, "Plan Start Date")
        self.et_Plan_Start_Date = wx.TextCtrl(self, -1, "")
        self.et_Plan_Start_Time_Label = wx.StaticText(self, -1, "Plan Start Time")
        self.et_Plan_Start_Time = wx.TextCtrl(self, -1, "")
        self.et_Plan_End_Date_Label = wx.StaticText(self, -1, "Plan End Date")
        self.et_Plan_End_Date = wx.TextCtrl(self, -1, "")
        self.et_Plan_End_Time_Label = wx.StaticText(self, -1, "Plan End Time")
        self.et_Plan_End_Time = wx.TextCtrl(self, -1, "")
        self.et_Plan_Duration_Hours_Label = wx.StaticText(self, -1, "Plan Duration Hours")
        self.et_Plan_Duration_Hours = wx.TextCtrl(self, -1, "")
        self.et_Actual_Start_Date_Label = wx.StaticText(self, -1, "Actual Start Date")
        self.et_Actual_Start_Date = wx.TextCtrl(self, -1, "")
        self.et_Actual_Start_Time_Label = wx.StaticText(self, -1, "Actual Start Time")
        self.et_Actual_Start_Time = wx.TextCtrl(self, -1, "")
        self.et_Actual_End_Date_Label = wx.StaticText(self, -1, "Actual End Date")
        self.et_Actual_End_Date = wx.TextCtrl(self, -1, "")
        self.et_Actual_End_Time_Label = wx.StaticText(self, -1, "Actual End Time")
        self.et_Actual_End_Time = wx.TextCtrl(self, -1, "")
        self.et_Percent_Complete_Label = wx.StaticText(self, -1, "Percent Complete")
        self.et_Percent_Complete = wx.TextCtrl(self, -1, "")
        self.EstimateLabel = wx.StaticText(self, -1, "Estimate")
        self.label_11 = wx.StaticText(self, -1, "Notes")
        self.EstimateNotes = wx.TextCtrl(self, -1, "", style=wx.TE_MULTILINE)
        self.et_Add_Estimate_Button = wx.Button(self.panel_1, -1, "Add to Estimate")
        self.et_Remove_Estimate_Button = wx.Button(self.panel_1, -1, "Remove from Estimate")
        self.list_ctrl_3 = wx.ListCtrl(self, -1, style=wx.LC_REPORT|wx.SUNKEN_BORDER)
        self.DependencyLabel = wx.StaticText(self, -1, "Dependency")
        self.Notes = wx.StaticText(self, -1, "Notes")
        self.DpendencyNotes = wx.TextCtrl(self, -1, "")
        self.et_Add_Dependency_Button = wx.Button(self.panel_2, -1, "Add Dependency")
        self.et_Remove_Dependency_Button = wx.Button(self.panel_2, -1, "Remove Dependency")
        self.list_ctrl_4 = wx.ListCtrl(self, -1, style=wx.LC_REPORT|wx.SUNKEN_BORDER)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: EditTaskFrame.__set_properties
        self.SetTitle("Edit Task")
        self.SetSize((476, 690))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: EditTaskFrame.__do_layout
        sizer_7 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_4 = wx.GridSizer(2, 2, 0, 0)
        sizer_23 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_3 = wx.GridSizer(2, 2, 0, 0)
        sizer_22 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_2 = wx.GridSizer(10, 2, 0, 0)
        sizer_7.Add(self.EditTaskLabel, 0, 0, 0)
        grid_sizer_2.Add(self.et_Name_Label, 0, 0, 0)
        grid_sizer_2.Add(self.et_Name, 0, 0, 0)
        grid_sizer_2.Add(self.et_Plan_Start_Date_Label, 0, 0, 0)
        grid_sizer_2.Add(self.et_Plan_Start_Date, 0, 0, 0)
        grid_sizer_2.Add(self.et_Plan_Start_Time_Label, 0, 0, 0)
        grid_sizer_2.Add(self.et_Plan_Start_Time, 0, 0, 0)
        grid_sizer_2.Add(self.et_Plan_End_Date_Label, 0, 0, 0)
        grid_sizer_2.Add(self.et_Plan_End_Date, 0, 0, 0)
        grid_sizer_2.Add(self.et_Plan_End_Time_Label, 0, 0, 0)
        grid_sizer_2.Add(self.et_Plan_End_Time, 0, 0, 0)
        grid_sizer_2.Add(self.et_Plan_Duration_Hours_Label, 0, 0, 0)
        grid_sizer_2.Add(self.et_Plan_Duration_Hours, 0, 0, 0)
        grid_sizer_2.Add(self.et_Actual_Start_Date_Label, 0, 0, 0)
        grid_sizer_2.Add(self.et_Actual_Start_Date, 0, 0, 0)
        grid_sizer_2.Add(self.et_Actual_Start_Time_Label, 0, 0, 0)
        grid_sizer_2.Add(self.et_Actual_Start_Time, 0, 0, 0)
        grid_sizer_2.Add(self.et_Actual_End_Date_Label, 0, 0, 0)
        grid_sizer_2.Add(self.et_Actual_End_Date, 0, 0, 0)
        grid_sizer_2.Add(self.et_Actual_End_Time_Label, 0, 0, 0)
        grid_sizer_2.Add(self.et_Actual_End_Time, 0, 0, 0)
        grid_sizer_2.Add(self.et_Percent_Complete_Label, 0, 0, 0)
        grid_sizer_2.Add(self.et_Percent_Complete, 0, 0, 0)
        sizer_7.Add(grid_sizer_2, 1, wx.EXPAND, 0)
        sizer_7.Add(self.EstimateLabel, 0, 0, 0)
        grid_sizer_3.Add(self.label_11, 0, 0, 0)
        grid_sizer_3.Add(self.EstimateNotes, 0, 0, 0)
        sizer_22.Add(self.et_Add_Estimate_Button, 0, wx.EXPAND, 0)
        sizer_22.Add(self.et_Remove_Estimate_Button, 0, wx.EXPAND, 0)
        self.panel_1.SetAutoLayout(1)
        self.panel_1.SetSizer(sizer_22)
        sizer_22.Fit(self.panel_1)
        sizer_22.SetSizeHints(self.panel_1)
        grid_sizer_3.Add(self.panel_1, 1, wx.EXPAND, 0)
        grid_sizer_3.Add(self.list_ctrl_3, 1, wx.EXPAND, 0)
        sizer_7.Add(grid_sizer_3, 1, wx.EXPAND, 0)
        sizer_7.Add(self.DependencyLabel, 0, 0, 0)
        grid_sizer_4.Add(self.Notes, 0, 0, 0)
        grid_sizer_4.Add(self.DpendencyNotes, 0, 0, 0)
        sizer_23.Add(self.et_Add_Dependency_Button, 0, wx.EXPAND, 0)
        sizer_23.Add(self.et_Remove_Dependency_Button, 0, wx.EXPAND, 0)
        self.panel_2.SetAutoLayout(1)
        self.panel_2.SetSizer(sizer_23)
        sizer_23.Fit(self.panel_2)
        sizer_23.SetSizeHints(self.panel_2)
        grid_sizer_4.Add(self.panel_2, 1, wx.EXPAND, 0)
        grid_sizer_4.Add(self.list_ctrl_4, 1, wx.EXPAND, 0)
        sizer_7.Add(grid_sizer_4, 1, wx.EXPAND, 0)
        self.SetAutoLayout(1)
        self.SetSizer(sizer_7)
        self.Layout()
        # end wxGlade

# end of class EditTaskFrame


class EditResourceFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: EditResourceFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.panel_4 = wx.Panel(self, -1)
        self.panel_3 = wx.Panel(self, -1)
        self.eres_Edit_Resource_Label = wx.StaticText(self, -1, "Edit Resource")
        self.er_Name_Label = wx.StaticText(self, -1, "Name")
        self.text_ctrl_15 = wx.TextCtrl(self, -1, "")
        self.eres_Kind_Label = wx.StaticText(self, -1, "Kind of Resource")
        self.er_Add_Kind = wx.Button(self.panel_3, -1, "Add Kind")
        self.button_4 = wx.Button(self.panel_3, -1, "Remove Kind")
        self.list_ctrl_5 = wx.ListCtrl(self, -1, style=wx.LC_REPORT|wx.SUNKEN_BORDER)
        self.eres_Assignment_Label = wx.StaticText(self, -1, "Assignment")
        self.er_Add_Assignment = wx.Button(self.panel_4, -1, "Add Assignment")
        self.er_Remove_Assignment = wx.Button(self.panel_4, -1, "Remove Assignment")
        self.list_ctrl_6 = wx.ListCtrl(self, -1, style=wx.LC_REPORT|wx.SUNKEN_BORDER)
        self.eres_Appy_Changes_Buttoon = wx.Button(self, -1, "Apply Changes")
        self.eres_Ignore_Changes_Button = wx.Button(self, -1, "Ignore Changes")

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: EditResourceFrame.__set_properties
        self.SetTitle("Edit Resource")
        self.SetSize((400, 300))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: EditResourceFrame.__do_layout
        sizer_6 = wx.BoxSizer(wx.VERTICAL)
        sizer_21 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_13 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_20 = wx.BoxSizer(wx.VERTICAL)
        sizer_12 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_19 = wx.BoxSizer(wx.VERTICAL)
        sizer_11 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_6.Add(self.eres_Edit_Resource_Label, 0, 0, 0)
        sizer_11.Add(self.er_Name_Label, 0, 0, 0)
        sizer_11.Add(self.text_ctrl_15, 0, 0, 0)
        sizer_6.Add(sizer_11, 1, wx.EXPAND, 0)
        sizer_6.Add(self.eres_Kind_Label, 0, 0, 0)
        sizer_19.Add(self.er_Add_Kind, 0, wx.EXPAND, 0)
        sizer_19.Add(self.button_4, 0, wx.EXPAND, 0)
        self.panel_3.SetAutoLayout(1)
        self.panel_3.SetSizer(sizer_19)
        sizer_19.Fit(self.panel_3)
        sizer_19.SetSizeHints(self.panel_3)
        sizer_12.Add(self.panel_3, 1, wx.EXPAND, 0)
        sizer_12.Add(self.list_ctrl_5, 1, wx.EXPAND, 0)
        sizer_6.Add(sizer_12, 1, wx.EXPAND, 0)
        sizer_6.Add(self.eres_Assignment_Label, 0, 0, 0)
        sizer_20.Add(self.er_Add_Assignment, 0, wx.EXPAND, 0)
        sizer_20.Add(self.er_Remove_Assignment, 0, wx.EXPAND, 0)
        self.panel_4.SetAutoLayout(1)
        self.panel_4.SetSizer(sizer_20)
        sizer_20.Fit(self.panel_4)
        sizer_20.SetSizeHints(self.panel_4)
        sizer_13.Add(self.panel_4, 1, wx.EXPAND, 0)
        sizer_13.Add(self.list_ctrl_6, 1, wx.EXPAND, 0)
        sizer_6.Add(sizer_13, 1, wx.EXPAND, 0)
        sizer_21.Add(self.eres_Appy_Changes_Buttoon, 0, 0, 0)
        sizer_21.Add(self.eres_Ignore_Changes_Button, 0, 0, 0)
        sizer_6.Add(sizer_21, 1, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL, 0)
        self.SetAutoLayout(1)
        self.SetSizer(sizer_6)
        self.Layout()
        # end wxGlade

# end of class EditResourceFrame


class EditReportFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: EditReportFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.panel_6 = wx.Panel(self, -1)
        self.panel_44 = wx.Panel(self, -1)
        self.panel_43 = wx.Panel(self, -1)
        self.Edit_Report_Label = wx.StaticText(self, -1, "Edit Report")
        self.label_1 = wx.StaticText(self, -1, "Name")
        self.text_ctrl_1 = wx.TextCtrl(self, -1, "")
        self.Report_All_Tasks_Label = wx.StaticText(self, -1, "Include All Tasks From Project")
        self.text_ctrl_2 = wx.TextCtrl(self, -1, "")
        self.Report_From_Date_Label = wx.StaticText(self, -1, "From Date")
        self.text_ctrl_3 = wx.TextCtrl(self, -1, "")
        self.Report_To_Date_Label = wx.StaticText(self, -1, "To Date")
        self.text_ctrl_4 = wx.TextCtrl(self, -1, "")
        self.erc_Column_Label = wx.StaticText(self, -1, "Columns")
        self.erc_Add_Column = wx.Button(self.panel_43, -1, "Add Column")
        self.erc_Remove_Column = wx.Button(self.panel_43, -1, "Remove Column")
        self.erc_Move_Up = wx.Button(self.panel_43, -1, "Move_Up")
        self.button_8 = wx.Button(self.panel_43, -1, "Move Down")
        self.list_ctrl_4 = wx.ListCtrl(self, -1, style=wx.LC_REPORT|wx.SUNKEN_BORDER)
        self.err_Row_Label = wx.StaticText(self, -1, "Rows")
        self.err_Add_Row = wx.Button(self.panel_44, -1, "Add Row")
        self.button_10 = wx.Button(self.panel_44, -1, "Remove Row")
        self.err_Move_Up = wx.Button(self.panel_44, -1, "Move Up")
        self.err_Move_Down = wx.Button(self.panel_44, -1, "Move Down")
        self.list_ctrl_4 = wx.ListCtrl(self, -1, style=wx.LC_REPORT|wx.SUNKEN_BORDER)
        self.er_Apply_Changes = wx.Button(self.panel_6, -1, "Apply Changes")
        self.button_13 = wx.Button(self.panel_6, -1, "Ignore Changes")

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: EditReportFrame.__set_properties
        self.SetTitle("Edit Report")
        self.SetSize((457, 389))
        self.er_Apply_Changes.SetDefault()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: EditReportFrame.__do_layout
        sizer_45 = wx.BoxSizer(wx.VERTICAL)
        sizer_18 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_43 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_17 = wx.BoxSizer(wx.VERTICAL)
        sizer_42 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_16 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(7, 2, 0, 0)
        sizer_45.Add(self.Edit_Report_Label, 0, 0, 0)
        grid_sizer_1.Add(self.label_1, 0, 0, 0)
        grid_sizer_1.Add(self.text_ctrl_1, 0, 0, 0)
        grid_sizer_1.Add(self.Report_All_Tasks_Label, 0, 0, 0)
        grid_sizer_1.Add(self.text_ctrl_2, 0, 0, 0)
        grid_sizer_1.Add(self.Report_From_Date_Label, 0, 0, 0)
        grid_sizer_1.Add(self.text_ctrl_3, 0, 0, 0)
        grid_sizer_1.Add(self.Report_To_Date_Label, 0, 0, 0)
        grid_sizer_1.Add(self.text_ctrl_4, 0, 0, 0)
        sizer_45.Add(grid_sizer_1, 1, wx.EXPAND, 0)
        sizer_45.Add(self.erc_Column_Label, 0, 0, 0)
        sizer_16.Add(self.erc_Add_Column, 0, wx.EXPAND, 0)
        sizer_16.Add(self.erc_Remove_Column, 0, wx.EXPAND, 0)
        sizer_16.Add(self.erc_Move_Up, 0, wx.EXPAND, 0)
        sizer_16.Add(self.button_8, 0, wx.EXPAND, 0)
        self.panel_43.SetAutoLayout(1)
        self.panel_43.SetSizer(sizer_16)
        sizer_16.Fit(self.panel_43)
        sizer_16.SetSizeHints(self.panel_43)
        sizer_42.Add(self.panel_43, 1, 0, 0)
        sizer_42.Add(self.list_ctrl_4, 1, wx.EXPAND, 0)
        sizer_45.Add(sizer_42, 1, wx.EXPAND, 0)
        sizer_45.Add(self.err_Row_Label, 0, 0, 0)
        sizer_17.Add(self.err_Add_Row, 0, wx.EXPAND, 0)
        sizer_17.Add(self.button_10, 0, wx.EXPAND, 0)
        sizer_17.Add(self.err_Move_Up, 0, wx.EXPAND, 0)
        sizer_17.Add(self.err_Move_Down, 0, wx.EXPAND, 0)
        self.panel_44.SetAutoLayout(1)
        self.panel_44.SetSizer(sizer_17)
        sizer_17.Fit(self.panel_44)
        sizer_17.SetSizeHints(self.panel_44)
        sizer_43.Add(self.panel_44, 1, 0, 0)
        sizer_43.Add(self.list_ctrl_4, 1, wx.EXPAND, 0)
        sizer_45.Add(sizer_43, 1, wx.EXPAND, 0)
        sizer_18.Add(self.er_Apply_Changes, 0, 0, 0)
        sizer_18.Add(self.button_13, 0, 0, 0)
        self.panel_6.SetAutoLayout(1)
        self.panel_6.SetSizer(sizer_18)
        sizer_18.Fit(self.panel_6)
        sizer_18.SetSizeHints(self.panel_6)
        sizer_45.Add(self.panel_6, 1, 0, 0)
        self.SetAutoLayout(1)
        self.SetSizer(sizer_45)
        self.Layout()
        # end wxGlade

# end of class EditReportFrame


class UserFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: UserFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.panel_5 = wx.Panel(self, -1)
        self.Edit_User_Label = wx.StaticText(self, -1, "Edit User")
        self.eu_Add_User = wx.Button(self.panel_5, -1, "Add User")
        self.eu_Remove_User = wx.Button(self.panel_5, -1, "Remove User")
        self.button_5 = wx.Button(self.panel_5, -1, "button_5")
        self.button_6 = wx.Button(self.panel_5, -1, "button_6")
        self.eu_SkillList = wx.ListCtrl(self, -1, style=wx.LC_REPORT|wx.SUNKEN_BORDER)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: UserFrame.__set_properties
        self.SetTitle("User")
        self.SetSize((400, 300))
        self.button_5.Hide()
        self.button_6.Hide()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: UserFrame.__do_layout
        sizer_8 = wx.BoxSizer(wx.VERTICAL)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_15 = wx.BoxSizer(wx.VERTICAL)
        sizer_8.Add(self.Edit_User_Label, 0, 0, 0)
        sizer_15.Add(self.eu_Add_User, 0, wx.EXPAND, 0)
        sizer_15.Add(self.eu_Remove_User, 0, wx.EXPAND, 0)
        sizer_15.Add(self.button_5, 0, wx.EXPAND, 0)
        sizer_15.Add(self.button_6, 0, wx.EXPAND, 0)
        self.panel_5.SetAutoLayout(1)
        self.panel_5.SetSizer(sizer_15)
        sizer_15.Fit(self.panel_5)
        sizer_15.SetSizeHints(self.panel_5)
        sizer_5.Add(self.panel_5, 1, wx.EXPAND, 0)
        sizer_5.Add(self.eu_SkillList, 1, wx.EXPAND, 0)
        sizer_8.Add(sizer_5, 1, wx.EXPAND, 0)
        self.SetAutoLayout(1)
        self.SetSizer(sizer_8)
        self.Layout()
        # end wxGlade

# end of class UserFrame


class PreferencesFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: PreferencesFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.notebook_1 = wx.Notebook(self, -1, style=0)
        self.notebook_1_pane_1 = wx.Panel(self.notebook_1, -1)
        self.pc_include_label = wx.StaticText(self.notebook_1_pane_1, -1, "Include:")
        self.pc_Tasks = wx.CheckBox(self.notebook_1_pane_1, -1, "Tasks")
        self.pc_Estimates = wx.CheckBox(self.notebook_1_pane_1, -1, "Estimates")
        self.pc_Resource_Assignments = wx.CheckBox(self.notebook_1_pane_1, -1, "Resource Assignments")
        self.rc_include_label = wx.StaticText(self.notebook_1_pane_1, -1, "Include:")
        self.rc_Columns = wx.CheckBox(self.notebook_1_pane_1, -1, "Column Definitions")
        self.rc_Rows = wx.CheckBox(self.notebook_1_pane_1, -1, "Row Definitions")
        self.checkbox_6 = wx.CheckBox(self.notebook_1_pane_1, -1, "checkbox_6")
        self.tc_include_label = wx.StaticText(self.notebook_1_pane_1, -1, "Include:")
        self.tc_Estimates = wx.CheckBox(self.notebook_1_pane_1, -1, "Estimates")
        self.tc_Resource_Assignmets = wx.CheckBox(self.notebook_1_pane_1, -1, "Resource Assignments")
        self.checkbox_9 = wx.CheckBox(self.notebook_1_pane_1, -1, "checkbox_9")
        self.resc_options_label = wx.StaticText(self.notebook_1_pane_1, -1, "Include:")
        self.resc_Skills = wx.CheckBox(self.notebook_1_pane_1, -1, "Skills")
        self.checkbox_11 = wx.CheckBox(self.notebook_1_pane_1, -1, "checkbox_11")
        self.checkbox_12 = wx.CheckBox(self.notebook_1_pane_1, -1, "checkbox_12")
        self.notebook_1_pane_2 = wx.Panel(self.notebook_1, -1)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: PreferencesFrame.__set_properties
        self.SetTitle("Preferences")
        self.SetSize((412, 356))
        self.pc_Tasks.SetValue(1)
        self.pc_Estimates.SetValue(1)
        self.rc_Columns.SetValue(1)
        self.checkbox_6.Hide()
        self.tc_Estimates.SetValue(1)
        self.checkbox_9.Hide()
        self.resc_Skills.SetValue(1)
        self.checkbox_11.Hide()
        self.checkbox_12.Hide()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: PreferencesFrame.__do_layout
        sizer_14 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_5 = wx.GridSizer(2, 2, 0, 0)
        resc_options_sizer = wx.StaticBoxSizer(wx.StaticBox(self.notebook_1_pane_1, -1, "Resource Copy Options"), wx.VERTICAL)
        tc_options_sizer = wx.StaticBoxSizer(wx.StaticBox(self.notebook_1_pane_1, -1, "Task Copy Options"), wx.VERTICAL)
        rc_options_sizer = wx.StaticBoxSizer(wx.StaticBox(self.notebook_1_pane_1, -1, "Report Copy Options"), wx.VERTICAL)
        pc_options_sizer = wx.StaticBoxSizer(wx.StaticBox(self.notebook_1_pane_1, -1, "Program Copy Options"), wx.VERTICAL)
        pc_options_sizer.Add(self.pc_include_label, 0, 0, 0)
        pc_options_sizer.Add(self.pc_Tasks, 0, 0, 0)
        pc_options_sizer.Add(self.pc_Estimates, 0, 0, 0)
        pc_options_sizer.Add(self.pc_Resource_Assignments, 0, 0, 0)
        grid_sizer_5.Add(pc_options_sizer, 1, wx.EXPAND, 0)
        rc_options_sizer.Add(self.rc_include_label, 0, 0, 0)
        rc_options_sizer.Add(self.rc_Columns, 0, 0, 0)
        rc_options_sizer.Add(self.rc_Rows, 0, 0, 0)
        rc_options_sizer.Add(self.checkbox_6, 0, 0, 0)
        grid_sizer_5.Add(rc_options_sizer, 1, wx.EXPAND, 0)
        tc_options_sizer.Add(self.tc_include_label, 0, 0, 0)
        tc_options_sizer.Add(self.tc_Estimates, 0, 0, 0)
        tc_options_sizer.Add(self.tc_Resource_Assignmets, 0, 0, 0)
        tc_options_sizer.Add(self.checkbox_9, 0, 0, 0)
        grid_sizer_5.Add(tc_options_sizer, 1, wx.EXPAND, 0)
        resc_options_sizer.Add(self.resc_options_label, 0, 0, 0)
        resc_options_sizer.Add(self.resc_Skills, 0, 0, 0)
        resc_options_sizer.Add(self.checkbox_11, 0, 0, 0)
        resc_options_sizer.Add(self.checkbox_12, 0, 0, 0)
        grid_sizer_5.Add(resc_options_sizer, 1, wx.EXPAND, 0)
        self.notebook_1_pane_1.SetAutoLayout(1)
        self.notebook_1_pane_1.SetSizer(grid_sizer_5)
        grid_sizer_5.Fit(self.notebook_1_pane_1)
        grid_sizer_5.SetSizeHints(self.notebook_1_pane_1)
        self.notebook_1.AddPage(self.notebook_1_pane_1, "Copy Options")
        self.notebook_1.AddPage(self.notebook_1_pane_2, "Save Options")
        sizer_14.Add(wx.NotebookSizer(self.notebook_1), 1, wx.EXPAND, 0)
        self.SetAutoLayout(1)
        self.SetSizer(sizer_14)
        self.Layout()
        # end wxGlade

# end of class PreferencesFrame


class EditProjectPFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: EditProjectPFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.panel_7 = wx.Panel(self, -1)
        self.ep_grid_panel1 = wx.Panel(self.panel_7, -1)
        self.label_1 = wx.StaticText(self.ep_grid_panel1, -1, "Name")
        self.text_ctrl_1 = wx.TextCtrl(self.ep_grid_panel1, -1, "")
        self.label_2 = wx.StaticText(self.ep_grid_panel1, -1, "Start Date")
        self.text_ctrl_2 = wx.TextCtrl(self.ep_grid_panel1, -1, "")
        self.label_3 = wx.StaticText(self.ep_grid_panel1, -1, "Target End Date")
        self.text_ctrl_3 = wx.TextCtrl(self.ep_grid_panel1, -1, "")
        self.label_4 = wx.StaticText(self.ep_grid_panel1, -1, "Calculated End Date")
        self.text_ctrl_4 = wx.TextCtrl(self.ep_grid_panel1, -1, "")
        self.label_5 = wx.StaticText(self.ep_grid_panel1, -1, "Hours Per Day")
        self.spin_ctrl_1 = wx.SpinCtrl(self.ep_grid_panel1, -1, "", min=0, max=100)
        self.label_6 = wx.StaticText(self.ep_grid_panel1, -1, "Days Per Week")
        self.spin_ctrl_2 = wx.SpinCtrl(self.ep_grid_panel1, -1, "", min=0, max=100)
        self.label_7 = wx.StaticText(self.panel_7, -1, "Description")
        self.text_ctrl_5 = wx.TextCtrl(self.panel_7, -1, "", style=wx.TE_MULTILINE|wx.TE_LINEWRAP)
        self.button_1 = wx.Button(self.panel_7, -1, "button_1")
        self.button_2 = wx.Button(self.panel_7, -1, "button_2")

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: EditProjectPFrame.__set_properties
        self.SetTitle("Edit Project")
        self.spin_ctrl_1.SetBackgroundColour(wx.Colour(255, 255, 255))
        self.spin_ctrl_2.SetBackgroundColour(wx.Colour(255, 255, 255))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: EditProjectPFrame.__do_layout
        sizer_10 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_24 = wx.BoxSizer(wx.VERTICAL)
        sizer_25 = wx.BoxSizer(wx.VERTICAL)
        sizer_27 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1 = wx.GridSizer(7, 2, 0, 0)
        sizer_10.Add((10, 10), 0, wx.EXPAND, 0)
        sizer_24.Add((10, 10), 0, 0, 0)
        grid_sizer_1.Add(self.label_1, 0, 0, 0)
        grid_sizer_1.Add(self.text_ctrl_1, 0, 0, 0)
        grid_sizer_1.Add(self.label_2, 0, 0, 0)
        grid_sizer_1.Add(self.text_ctrl_2, 0, 0, 0)
        grid_sizer_1.Add(self.label_3, 0, 0, 0)
        grid_sizer_1.Add(self.text_ctrl_3, 0, 0, 0)
        grid_sizer_1.Add(self.label_4, 0, 0, 0)
        grid_sizer_1.Add(self.text_ctrl_4, 0, 0, 0)
        grid_sizer_1.Add(self.label_5, 0, 0, 0)
        grid_sizer_1.Add(self.spin_ctrl_1, 0, 0, 0)
        grid_sizer_1.Add(self.label_6, 0, 0, 0)
        grid_sizer_1.Add(self.spin_ctrl_2, 0, 0, 0)
        self.ep_grid_panel1.SetAutoLayout(1)
        self.ep_grid_panel1.SetSizer(grid_sizer_1)
        grid_sizer_1.Fit(self.ep_grid_panel1)
        grid_sizer_1.SetSizeHints(self.ep_grid_panel1)
        sizer_24.Add(self.ep_grid_panel1, 1, wx.EXPAND, 0)
        sizer_25.Add(self.label_7, 0, 0, 0)
        sizer_25.Add(self.text_ctrl_5, 0, wx.EXPAND, 0)
        sizer_27.Add((10, 10), 0, 0, 0)
        sizer_27.Add(self.button_1, 0, 0, 0)
        sizer_27.Add((10, 10), 0, 0, 0)
        sizer_27.Add(self.button_2, 0, 0, 0)
        sizer_27.Add((10, 10), 0, 0, 0)
        sizer_25.Add(sizer_27, 1, wx.EXPAND, 0)
        sizer_24.Add(sizer_25, 1, wx.EXPAND, 0)
        sizer_24.Add((10, 10), 0, 0, 0)
        self.panel_7.SetAutoLayout(1)
        self.panel_7.SetSizer(sizer_24)
        sizer_24.Fit(self.panel_7)
        sizer_24.SetSizeHints(self.panel_7)
        sizer_10.Add(self.panel_7, 1, 0, 0)
        sizer_10.Add((10, 10), 0, wx.EXPAND, 0)
        self.SetAutoLayout(1)
        self.SetSizer(sizer_10)
        sizer_10.Fit(self)
        sizer_10.SetSizeHints(self)
        self.Layout()
        # end wxGlade

# end of class EditProjectPFrame


class MultipleSelection(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MultipleSelection.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.Instructions = wx.StaticText(self, -1, "Make selection\n")
        self.SelectionListBox = wx.ListBox(self, -1, choices=["choice 1", "choice 2"], style=wx.LB_MULTIPLE)
        self.OK = wx.Button(self, -1, "OK")
        self.Cancel = wx.Button(self, -1, "Cancel")

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MultipleSelection.__set_properties
        self.SetTitle("Selection")
        # self.SelectionListBox.SetSize((300, 200))
        self.SelectionListBox.SetSelection(0)
        self.OK.SetDefault()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MultipleSelection.__do_layout
        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_9 = wx.BoxSizer(wx.VERTICAL)
        sizer_26 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4.Add((10, 10), 0, 0, 0)
        sizer_9.Add((10, 10), 0, 0, 0)
        sizer_9.Add(self.Instructions, 0, wx.EXPAND, 0)
        sizer_9.Add((10, 10), 0, 0, 0)
        sizer_9.Add(self.SelectionListBox, 1, wx.GROW, 0)
        sizer_9.Add((10, 10), 0, 0, 0)
        sizer_26.Add((10, 10), 0, 0, 0)
        sizer_26.Add(self.OK, 0, 0, 0)
        sizer_26.Add((10, 10), 0, 0, 0)
        sizer_26.Add(self.Cancel, 0, 0, 0)
        sizer_26.Add((10, 10), 0, 0, 0)
        sizer_9.Add(sizer_26, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_9.Add((10, 10), 0, 0, 0)
        sizer_4.Add(sizer_9, 1, wx.GROW, 0)
        sizer_4.Add((10, 10), 0, 0, 0)
        self.SetAutoLayout(1)
        self.SetSizer(sizer_4)
        # sizer_4.Fit(self)
        # sizer_4.SetSizeHints(self)
        self.Layout()
        # end wxGlade

# end of class MultipleSelection


class MyDialog(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyDialog.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.Name_Label = wx.StaticText(self, -1, "Project Name")
        self.Name = wx.TextCtrl(self, -1, "")
        self.Start_Date_Label = wx.StaticText(self, -1, "Start Date  (YYYY-MM-DD)")
        self.Start_Date = wx.TextCtrl(self, -1, "")
        self.Target_End_Date_Label = wx.StaticText(self, -1, "Target End Date")
        self.Target_End_Date = wx.TextCtrl(self, -1, "")
        self.Description_Label = wx.StaticText(self, -1, "Description")
        self.Description = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER|wx.TE_MULTILINE)
        self.Project_OK = wx.Button(self, -1, "OK")
        self.Project_Cancel = wx.Button(self, -1, "Cancel")

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyDialog.__set_properties
        self.SetTitle("Edit Project Information")
        self.Name.SetSize((200, -1))
        self.Start_Date.SetSize((100, -1))
        self.Target_End_Date.SetSize((100, -1))
        self.Description.SetSize((400, 100))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyDialog.__do_layout
        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_32 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_31 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_6 = wx.FlexGridSizer(3, 3, 2, 2)
        sizer_1.Add((10, 10), 0, 0, 0)
        sizer_2.Add((10, 10), 0, 0, 0)
        grid_sizer_6.Add(self.Name_Label, 0, 0, 0)
        grid_sizer_6.Add(self.Name, 0, 0, 0)
        grid_sizer_6.Add((10, 10), 0, 0, 0)
        grid_sizer_6.Add(self.Start_Date_Label, 0, 0, 0)
        grid_sizer_6.Add(self.Start_Date, 0, 0, 0)
        grid_sizer_6.Add((10, 10), 0, 0, 0)
        grid_sizer_6.Add(self.Target_End_Date_Label, 0, 0, 0)
        grid_sizer_6.Add(self.Target_End_Date, 0, 0, 0)
        grid_sizer_6.Add((10, 10), 0, 0, 0)
        sizer_2.Add(grid_sizer_6, 1, wx.EXPAND, 0)
        sizer_2.Add((10, 10), 0, 0, 0)
        sizer_31.Add(self.Description_Label, 0, 0, 0)
        sizer_31.Add(self.Description, 0, wx.EXPAND, 0)
        sizer_2.Add(sizer_31, 1, wx.EXPAND, 0)
        sizer_2.Add((10, 10), 0, 0, 0)
        sizer_32.Add((10, 10), 0, 0, 0)
        sizer_32.Add(self.Project_OK, 0, 0, 0)
        sizer_32.Add((10, 10), 0, 0, 0)
        sizer_32.Add(self.Project_Cancel, 0, 0, 0)
        sizer_32.Add((10, 10), 0, 0, 0)
        sizer_2.Add(sizer_32, 1, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_2.Add((10, 10), 0, 0, 0)
        sizer_1.Add(sizer_2, 1, wx.EXPAND, 0)
        sizer_1.Add((10, 10), 0, 0, 0)
        self.SetAutoLayout(1)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        sizer_1.SetSizeHints(self)
        self.Layout()
        # end wxGlade

# end of class MyDialog


class GanttPVApp(wx.App):
    def OnInit(self):
        wx.InitAllImageHandlers()
        Main = MainFrame(None, -1, "")
        self.SetTopWindow(Main)
        Main.Show(1)

        return 1

# end of class GanttPVApp

if __name__ == "__main__":
    GanttPV = GanttPVApp(0)
    GanttPV.MainLoop()
